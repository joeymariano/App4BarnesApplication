{"ast":null,"code":"import _defineProperty from \"/home/joey/code/RubberyLividHertz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/joey/code/RubberyLividHertz/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/joey/code/RubberyLividHertz/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/joey/code/RubberyLividHertz/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/joey/code/RubberyLividHertz/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/joey/code/RubberyLividHertz/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/joey/code/RubberyLividHertz/src/components/CustomerForm.js\";\n// Name (cannot be empty)\n// Phone Number (at least 7 digits, only numbers)\n// Email Address (cannot be empty and must be in format abc@xyz.someTld)\n// Zip Code (at least 5 digits, only numbers)\nimport React, { Component } from 'react';\n\nvar CustomerForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomerForm, _Component);\n\n  function CustomerForm(props) {\n    var _this;\n\n    _classCallCheck(this, CustomerForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomerForm).call(this, props));\n\n    _this.updateState = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      phone: '',\n      email: '',\n      zipCode: ''\n    };\n    return _this;\n  }\n\n  _createClass(CustomerForm, [{\n    key: \"handleFormValidation\",\n    value: function handleFormValidation() {\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          phone = _this$state.phone,\n          email = _this$state.email,\n          zipcode = _this$state.zipcode;\n      var formErrors = {};\n      var formIsValid = true; //Student name     \n\n      if (!studName) {\n        formIsValid = false;\n        formErrors[\"studNameErr\"] = \"Name is required.\";\n      } //Email    \n\n\n      if (!emailId) {\n        formIsValid = false;\n        formErrors[\"emailIdErr\"] = \"Email id is required.\";\n      } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailId)) {\n        formIsValid = false;\n        formErrors[\"emailIdErr\"] = \"Invalid email id.\";\n      } //DOB    \n\n\n      if (!dob) {\n        formIsValid = false;\n        formErrors[\"dobErr\"] = \"Date of birth is required.\";\n      } else {\n        var pattern = /^(0[1-9]|1[0-9]|2[0-9]|3[0-1])\\/(0[1-9]|1[0-2])\\/([0-9]{4})$/;\n\n        if (!pattern.test(dob)) {\n          formIsValid = false;\n          formErrors[\"dobErr\"] = \"Invalid date of birth\";\n        }\n      } //Gender    \n\n\n      if (gender === '' || gender === \"select\") {\n        formIsValid = false;\n        formErrors[\"genderErr\"] = \"Select gender.\";\n      } //Phone number    \n\n\n      if (!phoneNumber) {\n        formIsValid = false;\n        formErrors[\"phoneNumberErr\"] = \"Phone number is required.\";\n      } else {\n        var mobPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;\n\n        if (!mobPattern.test(phoneNumber)) {\n          formIsValid = false;\n          formErrors[\"phoneNumberErr\"] = \"Invalid phone number.\";\n        }\n      } //City    \n\n\n      if (city === '' || city === \"select\") {\n        formIsValid = false;\n        formErrors[\"cityErr\"] = \"Select city.\";\n      }\n\n      this.setState({\n        formErrors: formErrors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"input\", {\n        id: \"firstName\",\n        name: \"firstName\",\n        type: \"text\",\n        value: this.state.firstName,\n        onChange: this.updateState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"input\", {\n        id: \"lastName\",\n        name: \"lastName\",\n        type: \"text\",\n        value: this.state.lastName,\n        onChange: this.updateState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(\"input\", {\n        id: \"phone\",\n        name: \"phone\",\n        type: \"text\",\n        value: this.state.phone,\n        onChange: this.updateState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        id: \"email\",\n        name: \"email\",\n        type: \"text\",\n        value: this.state.email,\n        onChange: this.updateState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"ZipCode\"), React.createElement(\"input\", {\n        id: \"zipCode\",\n        name: \"zipCode\",\n        type: \"text\",\n        value: this.state.zipCode,\n        onChange: this.updateState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomerForm;\n}(Component);\n\nexport default CustomerForm;","map":{"version":3,"sources":["/home/joey/code/RubberyLividHertz/src/components/CustomerForm.js"],"names":["React","Component","CustomerForm","props","updateState","event","setState","target","name","value","state","firstName","lastName","phone","email","zipCode","zipcode","formErrors","formIsValid","studName","emailId","test","dob","pattern","gender","phoneNumber","mobPattern","city"],"mappings":"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","sourcesContent":["// Name (cannot be empty)\n// Phone Number (at least 7 digits, only numbers)\n// Email Address (cannot be empty and must be in format abc@xyz.someTld)\n// Zip Code (at least 5 digits, only numbers)\n\nimport React, { Component } from 'react';\n\nclass CustomerForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      phone: '',\n      email: '',\n      zipCode: ''\n    };\n  }\n\n  updateState = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  \n\thandleFormValidation() {    \n\t    const { firstName, lastName, phone, email, zipcode } = this.state;    \n\t    let formErrors = {};    \n\t    let formIsValid = true;    \n\n\t    //Student name     \n\t    if (!studName) {    \n\t        formIsValid = false;    \n\t        formErrors[\"studNameErr\"] = \"Name is required.\";    \n\t    }    \n\n\t    //Email    \n\t    if (!emailId) {    \n\t        formIsValid = false;    \n\t        formErrors[\"emailIdErr\"] = \"Email id is required.\";    \n\t    }    \n\t    else if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailId))) {    \n\n\t        formIsValid = false;    \n\t        formErrors[\"emailIdErr\"] = \"Invalid email id.\";    \n\t    }    \n\n\t    //DOB    \n\t    if (!dob) {    \n\t        formIsValid = false;    \n\t        formErrors[\"dobErr\"] = \"Date of birth is required.\";    \n\t    }    \n\t    else {    \n\t        var pattern = /^(0[1-9]|1[0-9]|2[0-9]|3[0-1])\\/(0[1-9]|1[0-2])\\/([0-9]{4})$/;    \n\t        if (!pattern.test(dob)) {    \n\t            formIsValid = false;    \n\t            formErrors[\"dobErr\"] = \"Invalid date of birth\";    \n\t        }    \n\t    }    \n\n\t    //Gender    \n\t    if (gender === '' || gender === \"select\") {    \n\t        formIsValid = false;    \n\t        formErrors[\"genderErr\"] = \"Select gender.\";    \n\t    }    \n\n\t    //Phone number    \n\t    if (!phoneNumber) {    \n\t        formIsValid = false;    \n\t        formErrors[\"phoneNumberErr\"] = \"Phone number is required.\";    \n\t    }    \n\t    else {    \n\t        var mobPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;    \n\t        if (!mobPattern.test(phoneNumber)) {    \n\t            formIsValid = false;    \n\t            formErrors[\"phoneNumberErr\"] = \"Invalid phone number.\";    \n\t        }    \n\t    }    \n\n\t    //City    \n\t    if (city === '' || city === \"select\") {    \n\t        formIsValid = false;    \n\t        formErrors[\"cityErr\"] = \"Select city.\";    \n\t    }    \n\n\t    this.setState({ formErrors: formErrors });    \n\t    return formIsValid;    \n\t}      \n\n  render() {\n    return (\n      <form>\n        <label>First Name</label>\n        <input id=\"firstName\" name=\"firstName\" type=\"text\" value={ this.state.firstName } onChange={ this.updateState }/>\n        <label>Last Name</label>\n        <input id=\"lastName\" name=\"lastName\" type=\"text\" value={ this.state.lastName } onChange={ this.updateState }/>\n        <label>Phone</label>\n        <input id=\"phone\" name=\"phone\" type=\"text\" value={ this.state.phone } onChange={ this.updateState }/>\n\t\t<label>Email</label>\n        <input id=\"email\" name=\"email\" type=\"text\" value={ this.state.email } onChange={ this.updateState }/>\n        <label>ZipCode</label>\n        <input id=\"zipCode\" name=\"zipCode\" type=\"text\" value={ this.state.zipCode } onChange={ this.updateState }/>\n      </form>\n    )\n  }\n}\n\nexport default CustomerForm;"]},"metadata":{},"sourceType":"module"}