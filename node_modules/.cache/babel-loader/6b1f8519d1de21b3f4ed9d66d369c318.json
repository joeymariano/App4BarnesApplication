{"ast":null,"code":"import _objectSpread from \"/home/joey/code/app4barnes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport default function herosReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    heros: [],\n    info: [],\n    loading: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOADING_HEROS':\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case 'FETCH_HEROS':\n      var mergeHeros = state.hero.push(action.payload[0]);\n      return {\n        heros: mergeHeros,\n        info: action.payload[1],\n        loading: false\n      };\n\n    case 'DELETE_ALL_HEROS':\n      return {\n        heros: [],\n        loading: false\n      };\n\n    case 'ADD_HEROS':\n      return _objectSpread({}, state, {\n        heros: state.heros.push(this.action.payload)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/joey/code/app4barnes/src/reducers/herosReducer.js"],"names":["herosReducer","state","heros","info","loading","action","type","mergeHeros","hero","push","payload"],"mappings":";AACA,eAAe,SAASA,YAAT,GAA+E;AAAA,MAAzDC,KAAyD,uEAAjD;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE,EAAnB;AAAuBC,IAAAA,OAAO,EAAE;AAAhC,GAAiD;AAAA,MAARC,MAAQ;;AAC5F,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,+BAAYL,KAAZ;AAAmBG,QAAAA,OAAO,EAAE;AAA5B;;AAEF,SAAK,aAAL;AACE,UAAIG,UAAU,GAAGN,KAAK,CAACO,IAAN,CAAWC,IAAX,CAAgBJ,MAAM,CAACK,OAAP,CAAe,CAAf,CAAhB,CAAjB;AACA,aAAO;AAAER,QAAAA,KAAK,EAAEK,UAAT;AAAqBJ,QAAAA,IAAI,EAAEE,MAAM,CAACK,OAAP,CAAe,CAAf,CAA3B;AAA8CN,QAAAA,OAAO,EAAE;AAAvD,OAAP;;AAEF,SAAK,kBAAL;AACE,aAAO;AAAEF,QAAAA,KAAK,EAAE,EAAT;AAAaE,QAAAA,OAAO,EAAE;AAAtB,OAAP;;AAEF,SAAK,WAAL;AACE,+BAAYH,KAAZ;AAAmBC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYO,IAAZ,CAAiB,KAAKJ,MAAL,CAAYK,OAA7B;AAA1B;;AAEF;AACE,aAAOT,KAAP;AAfJ;AAiBD","sourcesContent":["\nexport default function herosReducer(state = { heros: [], info: [], loading: false }, action) {\n  switch (action.type) {\n    case 'LOADING_HEROS':\n      return { ...state, loading: true}\n\n    case 'FETCH_HEROS':\n      let mergeHeros = state.hero.push(action.payload[0])\n      return { heros: mergeHeros, info: action.payload[1], loading: false }\n\n    case 'DELETE_ALL_HEROS':\n      return { heros: [], loading: false }\n\n    case 'ADD_HEROS':\n      return { ...state, heros: state.heros.push(this.action.payload) }\n\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}