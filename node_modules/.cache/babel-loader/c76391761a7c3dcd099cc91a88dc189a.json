{"ast":null,"code":"import _defineProperty from \"/home/joey/code/app4barnes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/joey/code/app4barnes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/joey/code/app4barnes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/joey/code/app4barnes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/joey/code/app4barnes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/joey/code/app4barnes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/joey/code/app4barnes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/joey/code/app4barnes/src/components/CustomerForm.js\";\n// Name (cannot be empty) X\n// Phone Number (at least 7 digits, only numbers)\n// Email Address (cannot be empty and must be in format abc@xyz.someTld)\n// Zip Code (at least 5 digits, only numbers)\nimport React, { Component } from 'react';\n\nvar CustomerForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomerForm, _Component);\n\n  function CustomerForm(props) {\n    var _this;\n\n    _classCallCheck(this, CustomerForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomerForm).call(this, props));\n\n    _this.formValidator = function () {\n      var _this$state = _this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          phone = _this$state.phone,\n          email = _this$state.email,\n          zipcode = _this$state.zipcode;\n      var formErrors = {};\n      var formIsValid = true; // frist name     \n\n      if (!firstName) {\n        formIsValid = false;\n        formErrors['firstNameErr'] = 'First Name is required.';\n      } // last name     \n\n\n      if (!lastName) {\n        formIsValid = false;\n        formErrors['lastNameErr'] = 'Last Name is required.';\n      } // email    \n\n\n      if (!email) {\n        formIsValid = false;\n        formErrors['emailErr'] = 'Email is required.';\n      } else {\n        var emailRegex = /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n\n        if (!emailRegex.test(email)) {\n          formIsValid = false;\n          formErrors['emailErr'] = 'Invalid email.';\n        }\n      } // phone number    \n\n\n      if (!phone) {\n        formIsValid = false;\n        formErrors['phoneErr'] = 'Phone number is required.';\n      } else {\n        var phoneRegex = /^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*\\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})(?:\\s*(?:#|x\\.?|ext\\.?|extension)\\s*(\\d+))?$/;\n\n        if (!phoneRegex.test(phone)) {\n          formIsValid = false;\n          formErrors['phoneErr'] = 'Invalid phone number.';\n        }\n      } // zipcode    \n\n\n      if (!zipcode) {\n        formIsValid = false;\n        formErrors['zipcodeErr'] = 'Phone number is required.';\n      } else {\n        var zipcodeRegex = /(^(?!0{5})(\\d{5})(?!-?0{4})(-?\\d{4})?$)/;\n\n        if (!zipcodeRegex.test(zipcode)) {\n          formIsValid = false;\n          formErrors['zipcodeErr'] = 'Invalid zipcode.';\n        }\n      } // update formError state\n\n\n      _this.setState(_objectSpread({}, _this.state, {\n        formErrors: formErrors\n      })); // return boolean\n\n\n      return formIsValid;\n    };\n\n    _this.updateState = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.formValidator()) {\n        // minimize form not header\n        // transition: transform 400ms ease-in; <== CSS\n        // \n        _this.setState(_this.initialState);\n      }\n    };\n\n    _this.minimizeCntrl = function (str) {\n      // use form.minimize and form.maximize depending on min max count?\n      if (_this.state.visible === true) {\n        _this.setState({\n          visible: false\n        });\n\n        return 'visible';\n      } else {\n        _this.setState({\n          visible: true\n        });\n\n        return 'invisible';\n      }\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      phone: '',\n      email: '',\n      zipcode: '',\n      formErrors: {},\n      visible: true\n    };\n    _this.initialState = _this.state;\n    return _this;\n  }\n\n  _createClass(CustomerForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        className: this.minimizeCntrl(),\n        onSubmit: function onSubmit(event) {\n          return _this2.handleSubmit(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"first-name-group\",\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"input\", {\n        id: \"first-name-input\",\n        name: \"firstName\",\n        type: \"text\",\n        value: this.state.firstName,\n        onChange: this.updateState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"first-name-err\",\n        className: \"errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.state.formErrors['firstNameErr'])), React.createElement(\"div\", {\n        id: \"last-name-group\",\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"input\", {\n        id: \"last-name-input\",\n        name: \"lastName\",\n        type: \"text\",\n        value: this.state.lastName,\n        onChange: this.updateState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"last-name-err\",\n        className: \"errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.formErrors['lastNameErr'])), React.createElement(\"div\", {\n        id: \"phone-group\",\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(\"input\", {\n        id: \"phone-input\",\n        name: \"phone\",\n        type: \"text\",\n        value: this.state.phone,\n        onChange: this.updateState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"phone-err\",\n        className: \"errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.state.formErrors['phoneErr'])), React.createElement(\"div\", {\n        id: \"email-group\",\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        id: \"email-input\",\n        name: \"email\",\n        type: \"text\",\n        value: this.state.email,\n        onChange: this.updateState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"email-err\",\n        className: \"errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.state.formErrors['emailErr'])), React.createElement(\"div\", {\n        id: \"zipcode-group\",\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Zipcode\"), React.createElement(\"input\", {\n        id: \"zipcode-input\",\n        name: \"zipcode\",\n        type: \"text\",\n        value: this.state.zipcode,\n        onChange: this.updateState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"zipcode-err\",\n        className: \"errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.state.formErrors['zipcodeErr'])), React.createElement(\"button\", {\n        id: \"submit\",\n        class: \"continue-button\",\n        type: \"submit\",\n        value: \"Continue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Continue\"));\n    }\n  }]);\n\n  return CustomerForm;\n}(Component);\n\nexport default CustomerForm;","map":{"version":3,"sources":["/home/joey/code/app4barnes/src/components/CustomerForm.js"],"names":["React","Component","CustomerForm","props","formValidator","state","firstName","lastName","phone","email","zipcode","formErrors","formIsValid","emailRegex","test","phoneRegex","zipcodeRegex","setState","updateState","event","target","name","value","handleSubmit","preventDefault","initialState","minimizeCntrl","str","visible"],"mappings":"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","sourcesContent":["// Name (cannot be empty) X\n// Phone Number (at least 7 digits, only numbers)\n// Email Address (cannot be empty and must be in format abc@xyz.someTld)\n// Zip Code (at least 5 digits, only numbers)\n\nimport React, { Component } from 'react';\n\nclass CustomerForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t  firstName: '',\n\t\t  lastName: '',\n\t\t  phone: '',\n\t\t  email: '',\n\t\t  zipcode: '',\n\t\t  formErrors: {},\n\t\t  visible: true\n\t \t}\n\n\t \tthis.initialState = this.state;    \n\t}\n\n\tformValidator = () => {\n\t\tlet { firstName, lastName, phone, email, zipcode } = this.state\n\t\tlet formErrors = {}\n\t\tlet formIsValid = true  \n\t\t// frist name     \n\t\tif (!firstName) {    \n\t\t\tformIsValid = false  \n\t\t\tformErrors['firstNameErr'] = 'First Name is required.'\n\t\t}   \n\t\t// last name     \n\t\tif (!lastName) {    \n\t\t\tformIsValid = false\n\t\t\tformErrors['lastNameErr'] = 'Last Name is required.'  \n\t\t} \n\t\t// email    \n\t\tif (!email) {    \n\t\t\tformIsValid = false;    \n\t\t\tformErrors['emailErr'] = 'Email is required.'    \n\t\t} else { \n\t\t\tlet emailRegex = /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/  \n\t\t\tif (!emailRegex.test(email)) { \n\t\t\tformIsValid = false\n\t\t\t\tformErrors['emailErr'] = 'Invalid email.'  \n\t\t\t}\n\t\t}    \n\t\t// phone number    \n\t\tif (!phone) {    \n\t\t\tformIsValid = false   \n\t\t\tformErrors['phoneErr'] = 'Phone number is required.' \n\t\t} else {    \n\t\t\tlet phoneRegex = /^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*\\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})(?:\\s*(?:#|x\\.?|ext\\.?|extension)\\s*(\\d+))?$/\n\t\t\tif (!phoneRegex.test(phone)) {    \n\t\t\t   formIsValid = false\n\t\t\t   formErrors['phoneErr'] = 'Invalid phone number.'    \n\t\t\t}\n\t\t}\n\t\t// zipcode    \n\t\tif (!zipcode) {    \n\t\t\tformIsValid = false;    \n\t\t\tformErrors['zipcodeErr'] = 'Phone number is required.' \n\t\t} else {    \n\t\t\tlet zipcodeRegex = /(^(?!0{5})(\\d{5})(?!-?0{4})(-?\\d{4})?$)/  \n\t\t\tif (!zipcodeRegex.test(zipcode)) {    \n\t\t\t   formIsValid = false\n\t\t\t   formErrors['zipcodeErr'] = 'Invalid zipcode.'\n\t\t\t}  \n\t\t}    \n\t\t// update formError state\n  \tthis.setState({ ...this.state, formErrors: formErrors })\n  \t// return boolean\n\t\treturn formIsValid;  \n\t}\n\n\tupdateState = (event) => {\n\t this.setState({\n\t   [event.target.name]: event.target.value\n\t })\n\t}\n\n\thandleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tif (this.formValidator()){\n\t    // minimize form not header\n\t    // transition: transform 400ms ease-in; <== CSS\n\t    // \n\t    this.setState(this.initialState)  \n\t\t}\n\t}\n\n\tminimizeCntrl = (str) => {\n\t\t// use form.minimize and form.maximize depending on min max count?\n\t\tif (this.state.visible === true){\n\t\t\tthis.setState({visible: false})\n\t\t\treturn 'visible'\n\t\t} else {\n\t\t\tthis.setState({visible: true})\n\t\t\treturn 'invisible'\n\t\t}\n\t}\n\n\n\n\trender() {\n\t\treturn (\n\t\t\t<form className={ this.minimizeCntrl() } onSubmit={ event => this.handleSubmit(event) }>\n\t\t\t\t<div id=\"first-name-group\" class=\"form-group\">\n\t\t\t\t\t<label>First Name</label>\n\t\t\t\t\t<input id='first-name-input' name='firstName' type='text' value={ this.state.firstName } onChange={ this.updateState }/>\n\t\t\t\t\t<div id='first-name-err' className='errors'>{ this.state.formErrors['firstNameErr'] }</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"last-name-group\" class=\"form-group\">\n\t\t\t\t\t<label>Last Name</label>\n\t\t\t\t\t<input id='last-name-input' name='lastName' type='text' value={ this.state.lastName } onChange={ this.updateState }/>\n\t\t\t\t\t<div id='last-name-err' className='errors'>{ this.state.formErrors['lastNameErr'] }</div>\n\t\t\t\t</div>\t\t\t\t\n\n\t\t\t\t<div id=\"phone-group\" class=\"form-group\">\n\t\t\t\t\t<label>Phone</label>\n\t\t\t\t\t<input id='phone-input' name='phone' type='text' value={ this.state.phone } onChange={ this.updateState }/>\n\t\t\t\t\t<div id='phone-err' className='errors'>{ this.state.formErrors['phoneErr'] }</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"email-group\" class=\"form-group\">\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input id='email-input' name='email' type='text' value={ this.state.email } onChange={ this.updateState }/>\n\t\t\t\t\t<div id='email-err' className='errors'>{this.state.formErrors['emailErr']}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"zipcode-group\" class=\"form-group\">\n\t\t\t\t\t<label>Zipcode</label>\n\t\t\t\t\t<input id='zipcode-input' name='zipcode' type='text' value={ this.state.zipcode } onChange={ this.updateState }/>\n\t\t\t\t\t<div id='zipcode-err' className='errors'>{ this.state.formErrors['zipcodeErr'] }</div>\n\t\t\t\t</div>\n\n\t\t\t\t<button id='submit' class='continue-button' type='submit' value='Continue'>Continue</button>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nexport default CustomerForm"]},"metadata":{},"sourceType":"module"}