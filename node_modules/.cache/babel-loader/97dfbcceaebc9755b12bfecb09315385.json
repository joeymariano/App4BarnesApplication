{"ast":null,"code":"import _objectSpread from \"/home/joey/code/app4barnes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport default function herosReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    heros: [],\n    info: [],\n    loading: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOADING_HEROS':\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case 'FETCH_HEROS':\n      debugger;\n      var mergeHeros = action.payload[0].concat(state.heros);\n      return {\n        heros: mergeHeros,\n        info: action.payload[1],\n        loading: false\n      };\n\n    case 'DELETE_ALL_HEROS':\n      return {\n        heros: [],\n        loading: false\n      };\n\n    case 'ADD_HEROS':\n      // mergeHeros is already defined - no need to define again\n      debugger;\n      return {\n        heros: mergeHeros\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/joey/code/app4barnes/src/reducers/herosReducer.js"],"names":["herosReducer","state","heros","info","loading","action","type","mergeHeros","payload","concat"],"mappings":";AACA,eAAe,SAASA,YAAT,GAA+E;AAAA,MAAzDC,KAAyD,uEAAjD;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE,EAAnB;AAAuBC,IAAAA,OAAO,EAAE;AAAhC,GAAiD;AAAA,MAARC,MAAQ;;AAC5F,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,+BAAYL,KAAZ;AAAmBG,QAAAA,OAAO,EAAE;AAA5B;;AAEF,SAAK,aAAL;AACE;AACA,UAAIG,UAAU,GAAGF,MAAM,CAACG,OAAP,CAAe,CAAf,EAAkBC,MAAlB,CAAyBR,KAAK,CAACC,KAA/B,CAAjB;AACA,aAAO;AAAEA,QAAAA,KAAK,EAAEK,UAAT;AAAqBJ,QAAAA,IAAI,EAAEE,MAAM,CAACG,OAAP,CAAe,CAAf,CAA3B;AAA8CJ,QAAAA,OAAO,EAAE;AAAvD,OAAP;;AAEF,SAAK,kBAAL;AACE,aAAO;AAAEF,QAAAA,KAAK,EAAE,EAAT;AAAaE,QAAAA,OAAO,EAAE;AAAtB,OAAP;;AAEF,SAAK,WAAL;AACE;AACA;AACA,aAAO;AAAEF,QAAAA,KAAK,EAAEK;AAAT,OAAP;;AAEF;AACE,aAAON,KAAP;AAlBJ;AAoBD","sourcesContent":["\nexport default function herosReducer(state = { heros: [], info: [], loading: false }, action) {\n  switch (action.type) {\n    case 'LOADING_HEROS':\n      return { ...state, loading: true}\n\n    case 'FETCH_HEROS':\n      debugger\n      let mergeHeros = action.payload[0].concat(state.heros)\n      return { heros: mergeHeros, info: action.payload[1], loading: false }\n\n    case 'DELETE_ALL_HEROS':\n      return { heros: [], loading: false }\n\n    case 'ADD_HEROS':\n      // mergeHeros is already defined - no need to define again\n      debugger\n      return { heros: mergeHeros }\n\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}